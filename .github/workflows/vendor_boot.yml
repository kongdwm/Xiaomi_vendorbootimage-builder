name: VENDOR_BOOT - TWRP

on:
  workflow_dispatch:
    inputs:
      DEVICE_TREE:
        description: 'Device Tree URL eg. https://github.com/<owner>/<repo>'
        required: true
        default: 'https://github.com/kongdwm/kongdwm-twrp_device_Xiaomi_pearl/'
      DEVICE_BRANCH:
        description: 'Device Tree Branch, eg. twrp-12.1'
        required: true
        default: 'master'
      DEVICE_PATH:
        description: 'Device Path, eg. device/vendor/codename'
        required: true
        default: 'device/xiaomi/pearl'
      DEVICE_MAKEFILE:
        description: 'Device Makefile, eg. twrp_codename'
        required: true
        default: 'twrp_pearl'
        
jobs:
  build:
    name: Build vendor_boot by ${{ github.actor }}
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
    steps:
    - name: Check Out
      uses: actions/checkout@v4
      
    - name: Cleanup
      uses: rokibhasansagar/slimhub_actions@main
      
    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 12
        
    - name: Prepare the environment
      run: |
        sudo apt update
        sudo apt -y upgrade
        sudo apt -y install gperf gcc-multilib gcc-10-multilib g++-multilib g++-10-multilib libc6-dev lib32ncurses5-dev x11proto-core-dev libx11-dev tree lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc bc ccache lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libwxgtk3.0-gtk3-dev libxml2 lzop pngcrush schedtool squashfs-tools imagemagick libbz2-dev lzma ncftp qemu-user-static libstdc++-10-dev libtinfo5 libgflags-dev
        sudo add-apt-repository universe
        sudo apt -y install libncurses5

    - name: Install OpenJDK
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '8'

    - name: Install Git-Repo
      run: |
        mkdir ~/bin
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
        chmod a+x ~/bin/repo
        sudo ln -sf ~/bin/repo /usr/bin/repo

    - name: Initialize Repo
      run: |
        mkdir android-recovery
        cd android-recovery
        git config --global user.name "${{ github.actor }}"
        git config --global user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
        repo init --depth=1 -u https://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp.git -b twrp-12.1
        sed -i '/<remove-project name="platform\/external\/gflags"  \/>/d' .repo/manifests/remove-minimal.xml
        
    - name: Repo Sync
      run: |
        cd android-recovery
        repo sync -j$(nproc --all) --force-sync
      
    - name: Clone Device Tree
      run: |
        cd android-recovery
        git clone ${{ inputs.DEVICE_TREE }} -b ${{ inputs.DEVICE_BRANCH }} ./${{ inputs.DEVICE_PATH }}
      
    - name: Building Image 
      run: |
        cd android-recovery
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        lunch ${{ inputs.DEVICE_MAKEFILE }}-eng && make clean && make vendorbootimage -j$(nproc --all)
      
    - name: Set Build Date # Output will be use in Release
      run: |
        echo "BUILD_DATE=$(date +%Y%m%d)" >> $GITHUB_ENV

    - name: Prepare magiskboot
      run: |
        wget https://github.com/TeamWin/external_magisk-prebuilt/raw/android-12.1/prebuilt/magiskboot_x86_64
        mv magiskboot_x86_64 magiskboot
        chmod a+x magiskboot

    - name: Prepare workspace
      run: |
        mkdir workspace; ls
        mkdir -p workspace/stock/unpack
        mkdir -p workspace/twrp/unpack

    - name: Download a copy of vendor_boot.img (stock)
      run: |
        wget https://tmp-hd106.vx-cdn.com/file-66b1c56fcbf9d-66b1c5d990e1c/vendor_boot.img
        mv vendor_boot.img workspace/stock/stock-vb.img

    - name: Make a copy of vendor_boot.img (twrp)
      run: |
        cp android-recovery/out/target/product/twrp_pearl/vendor_boot.img/boot.img/recovery.img workspace/twrp/twrp-vb.img

    - name: Unpack vendor_boot.img (stock)
      run: |
        cd ${GITHUB_WORKSPACE}/workspace/stock/unpack
        ${GITHUB_WORKSPACE}/magiskboot unpack ../stock-vb.img
        
    - name: Unpack vendor_boot.img (twrp)
      run: |
        cd ${GITHUB_WORKSPACE}/workspace/twrp/unpack
        ${GITHUB_WORKSPACE}/magiskboot unpack ../twrp-vb.img

    - name: Replace vendor_ramdisk_recovery.cpio (twrp > stock)
      run: |
        cd ${GITHUB_WORKSPACE}/workspace
        mv twrp/unpack/vendor_ramdisk_recovery.cpio stock/unpack
        cd ${GITHUB_WORKSPACE}/workspace/stock/unpack
        ${GITHUB_WORKSPACE}/magiskboot repack ${GITHUB_WORKSPACE}/workspace/stock/stock-vb.img new-vendor_boot.img
        mv new-vendor_boot.img ${GITHUB_WORKSPACE}/vendor_boot.img
        cd ${GITHUB_WORKSPACE}
        tar -cvf twrp-vendor_boot.tar vendor_boot.img
    
    - name: Upload to Release
      uses: softprops/action-gh-release@v2
      with:
        files: twrp-vendor_boot.tar
        name: Unofficial TWRP for pearl // ${{ env.BUILD_DATE }}
        tag_name: ${{ github.run_id }}-patched
        body: |
          # Flashable TWRP for pearl
          ## Notes
          This twrp-vendor_boot.tar can be flash via ODIN software. This was build using pearl twrp's vendor_boot.img and stock vendor_boot.img, by replacing stock's vendor_ramdisk_recovery.cpio using vendor_ramdisk_recovery.cpio from TWRP build.
